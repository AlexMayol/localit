!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).localit={})}(this,(function(e){"use strict";let t="";let o=localStorage;const r=e=>`${t}${e}`,n=e=>`${r(e)}_expiration_date`,s={config({domain:e=null,type:r="localStorage"}){o="localStorage"===r?localStorage:sessionStorage,t=e?`${e}_`:""},set(e,t,s){if(!e)return console.error("Localit: provide a key to store the value");"object"==typeof t&&(t=JSON.stringify(t)),o.setItem(r(e),t),s&&((e,t)=>{const r=new Date,s={h:e=>r.setHours(r.getHours()+e),d:e=>r.setDate(r.getDate()+e),m:e=>r.setMinutes(r.getMinutes()+e),s:e=>r.setSeconds(r.getSeconds()+e)},i=Object.keys(s),a=t[t.length-1],l=Number(t.replace(a,""));if(!i.some((e=>a===e))||isNaN(l))return console.warn("Localit: provide a valid expiration time format (e.g. '20h', '160s', '15d'). Your expiration date hasn't been saved.");o.setItem(n(e),JSON.stringify(s[a](l)))})(e,s)},get(e){if((e=>null!==o.getItem(n(e)))(e)&&(e=>{const t=JSON.parse(o.getItem(n(e)));return new Date>new Date(t)})(e))return this.remove(e),null;try{return JSON.parse(o.getItem(r(e)))}catch(t){return o.getItem(r(e))}},remove(e){o.removeItem(r(e)),o.removeItem(n(e))},getAndRemove(e){const t=this.get(e);return this.remove(e),t},setDomain(e){t=`${e}_`},clearDomain(e=t){for(const t of Object.keys(o))t.includes(`${e}_`)&&o.removeItem(t)},bust(){o.clear()}};e.localit=s,Object.defineProperty(e,"__esModule",{value:!0})}));
