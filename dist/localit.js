!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).localit={})}(this,(function(e){"use strict";let t="";const o="_expiration_date";let n=localStorage;const s=e=>`${t}${e}`,r={config({type:e="localStorage",domain:o=t}){n="localStorage"===e?localStorage:sessionStorage,t=""!==o?`${o}_`:o},set(e,t,r){if(!e)return console.error("Localit: provide a key to store a value");"object"==typeof t&&(t=JSON.stringify(t)),n.setItem(s(e),t),r&&((e,t)=>{if(!["h","d","m","s"].some((e=>t.includes(e))))return console.warn("Localit: provide a valid expiration time format (e.g. '20h', '160s', '15d'). Your expiration date hasn't been saved.");const r=new Date;let l=0;t.includes("s")&&(l=+t.replace("s",""),r.setSeconds(r.getSeconds()+l)),t.includes("m")&&(l=+t.replace("m",""),r.setMinutes(r.getMinutes()+l)),t.includes("h")&&(l=+t.replace("h",""),r.setHours(r.getHours()+l)),t.includes("d")&&(l=+t.replace("d",""),r.setDate(r.getDate()+l)),n.setItem(`${s(e)}${o}`,JSON.stringify(r))})(e,r)},get(e){if((e=>null!==n.getItem(`${s(e)}${o}`))(e)&&(e=>{const t=JSON.parse(n.getItem(`${s(e)}${o}`)||"null");return new Date>new Date(t)})(e))return this.remove(e),null;try{return JSON.parse(n.getItem(s(e)))}catch(e){return null}},remove(e){n.removeItem(s(e)),n.removeItem(`${s(e)}${o}`)},setDomain(e){t=`${e}_`},clearDomain(e=t){for(const t of Object.keys(n))t.includes(`${e}_`)&&n.removeItem(t)},bust(){n.clear()}};e.localit=r,Object.defineProperty(e,"__esModule",{value:!0})}));
